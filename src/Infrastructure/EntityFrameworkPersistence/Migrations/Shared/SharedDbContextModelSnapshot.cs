// <auto-generated />
using System;
using Infrastructure.Persistence.DbContexts.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.EntityFrameworkPersistence.Migrations.Shared
{
    [DbContext(typeof(SharedDbContext))]
    partial class SharedDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Shared.LinkSubscriberToStripeCustomer", b =>
                {
                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("StripeCustomerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SubscriberId");

                    b.HasIndex(new[] { "SubscriberId" }, "IX_LinkSubscriberToStripeCustomer_GlobalUserId")
                        .IsUnique();

                    b.ToTable("LinkSubscriberToStripeCustomer", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.ActivititesMember", b =>
                {
                    b.Property<int>("ActivityMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityMemberId"));

                    b.Property<int>("ActivitiesId")
                        .HasColumnType("int");

                    b.Property<string>("AttendeeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ContactSubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GlobalContactId")
                        .HasColumnType("int");

                    b.Property<bool>("InviteAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("InviteType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReminderJobId")
                        .HasColumnType("int");

                    b.Property<bool>("ReminderSent")
                        .HasColumnType("bit");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("UserIdGlobal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ActivityMemberId")
                        .HasName("PK_ActivitiesMembers");

                    b.HasIndex(new[] { "ActivitiesId" }, "IX_ActivititesMembers_ActivityId");

                    b.HasIndex(new[] { "ContactId" }, "IX_ActivititesMembers_ContactId");

                    b.HasIndex(new[] { "Email" }, "IX_ActivititesMembers_Email");

                    b.HasIndex(new[] { "SubscriberId" }, "IX_ActivititesMembers_SubscriberId");

                    b.HasIndex(new[] { "UserIdGlobal" }, "IX_ActivititesMembers_UserIdGlobal");

                    b.HasIndex(new[] { "UserId", "Deleted" }, "nci_wi_ActivititesMembers_5CCF269F1239B435B842295700B778D7");

                    b.HasIndex(new[] { "UserIdGlobal", "Deleted" }, "nci_wi_ActivititesMembers_C13E92456DB2B53673DE2C49D9624834");

                    b.HasIndex(new[] { "Deleted" }, "nci_wi_ActivititesMembers_FB61BE8B46C32FAFFE269EBC7292E6A0");

                    b.ToTable("ActivititesMembers");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ActivityMembers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityMembersBak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AdminActiveOveride")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AdminActiveOverideDate")
                        .HasColumnType("datetime");

                    b.Property<string>("BusyFree")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("CalendarEventId")
                        .HasColumnType("int");

                    b.Property<string>("CampaignIds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Campaigns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryIds")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CompanySubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("Competitors")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<int>("CompletionPercent")
                        .HasColumnType("int");

                    b.Property<string>("ContactIds")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConversionActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConversionCreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ConversionUpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserLocation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DealIds")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DealNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((30))");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EventSubject")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EventTimeZone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ExchangeAppointmentId")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("ExchangeAppointmentItemId")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<string>("ExchangeSyncId")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime?>("ExchangeSyncLastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("GoogleSyncId")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime?>("GoogleSyncLastModified")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRecurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NoteContent")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<string>("OriginSystem")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OwnerUserId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("OwnerUserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Priority")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PublicPrivate")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Reminder")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReminderDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReminderIncrement")
                        .HasColumnType("int");

                    b.Property<string>("ReminderIncrementType")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("ReminderMinutes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReminderType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ReminderTypes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ReoccurNumberOfTimes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ReoccurrenceIncrement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReoccurrenceIncrementType")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("ReoccurrenceParentActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SalesPurpose")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalesStage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("SavedAsActivity")
                        .HasColumnType("bit");

                    b.Property<string>("SourceDataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SourceDataCenterCalendarEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("SourceDataCenterNoteId")
                        .HasColumnType("int");

                    b.Property<int>("SourceDataCenterTaskId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceSubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Subject")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("SyncType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tags")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UserLocation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserTimeZone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtcOffset")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ActivityId");

                    b.HasIndex(new[] { "ActivityType" }, "IX_Activities_ActivityType");

                    b.HasIndex(new[] { "CompanyIdGlobal" }, "IX_Activities_CompanyIdGlobal");

                    b.HasIndex(new[] { "CreatedDate" }, "IX_Activities_CreatedDate");

                    b.HasIndex(new[] { "OwnerUserIdGlobal" }, "IX_Activities_OwnerUserIdGlobal");

                    b.HasIndex(new[] { "StartDateTime" }, "IX_Activities_StartDateTime");

                    b.HasIndex(new[] { "SubscriberId" }, "IX_Activities_SubscriberId");

                    b.HasIndex(new[] { "UserIdGlobal" }, "IX_Activities_UserIdGlobal");

                    b.HasIndex(new[] { "CalendarEventId" }, "nci_wi_Activities_034A33AF9C941C20DC903A096A5D1BD1");

                    b.HasIndex(new[] { "ActivityType", "CompanyIdGlobal", "DealIds" }, "nci_wi_Activities_5EE6EC992714D949547770F0BEC2604F");

                    b.HasIndex(new[] { "OwnerUserId", "Deleted" }, "nci_wi_Activities_9A92EBAE67E56EC9CD0DEE58DD8C8E8A");

                    b.HasIndex(new[] { "CompanyIdGlobal", "Completed" }, "nci_wi_Activities_A786A3316486AF61B2D0AB5E8F648DBB");

                    b.HasIndex(new[] { "GoogleSyncId", "ReoccurrenceParentActivityId", "ActivityId" }, "nci_wi_Activities_CFEE88E841BF6436C62169C82F36B330");

                    b.HasIndex(new[] { "Deleted" }, "nci_wi_Activities_DC83C1E827957C6F85D857CBE7D7FD57");

                    b.HasIndex(new[] { "OwnerUserIdGlobal", "Completed" }, "nci_wi_Activities_EAC44CF7B75B04F6774309B829C6C640");

                    b.HasIndex(new[] { "SubscriberId" }, "nci_wi_Activities_F5D8559C415D5CFCCDE6D6FA27C8E71F");

                    b.HasIndex(new[] { "CreatedDate" }, "nci_wi_Activities_F87577D8C9538AE640A8761647FDF120");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.AdminUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Forename")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Guid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Surname")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("AdminUser", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Airport", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirportId"));

                    b.Property<string>("AirportName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AirportType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Continent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ElevationFeet")
                        .HasColumnType("int");

                    b.Property<string>("GpsCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IataCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("IdentifierCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("IsoRegion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("LocalCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Municipality")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ScheduledService")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UrlHome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrlWikipedia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AirportId")
                        .HasName("PK_tblAirports");

                    b.HasIndex(new[] { "AirportName" }, "IX_Airports_AirportName");

                    b.HasIndex(new[] { "CountryCode" }, "IX_Airports_CountryCode");

                    b.HasIndex(new[] { "IataCode" }, "IX_Airports_IATA_Code");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.AsyncReportRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<int>("CompletedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ElapsedTime")
                        .HasColumnType("int");

                    b.Property<string>("Error")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ExcelFileUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("JsonDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JsonFileUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("JsonfileBlobReference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("JSONFileBlobReference");

                    b.Property<string>("JsonfileContainerReference")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("JSONFileContainerReference");

                    b.Property<string>("RefId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReportName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("RequestedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AsyncReportRequest", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.AsyncThread", b =>
                {
                    b.Property<int>("AsyncThreadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsyncThreadId"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateTimeStart")
                        .HasColumnType("datetime");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("Error")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemsError")
                        .HasColumnType("int");

                    b.Property<int>("ItemsProcessed")
                        .HasColumnType("int");

                    b.Property<int>("ItemsSuccess")
                        .HasColumnType("int");

                    b.Property<int>("ItemsTotal")
                        .HasColumnType("int");

                    b.Property<string>("JobSubType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("JobType")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ResponseJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<int?>("WorkflowAccountId")
                        .HasColumnType("int");

                    b.HasKey("AsyncThreadId");

                    b.ToTable("AsyncThreads");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.BillingContact", b =>
                {
                    b.Property<int>("BillingContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillingContactId"));

                    b.Property<int>("BillingEntityId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("DeletedByName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsPrimaryContact")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ToCc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BillingContactId")
                        .HasName("PK_SubscriberBillingContact");

                    b.ToTable("BillingContacts");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.BillingEntity", b =>
                {
                    b.Property<int>("BillingEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillingEntityId"));

                    b.Property<string>("Address01")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Address02")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("Billable")
                        .HasColumnType("bit");

                    b.Property<string>("BillingCurrencyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BillingCurrencySymbol")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BillingFrequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BillingUserRate")
                        .HasColumnType("money");

                    b.Property<string>("City")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("DeletedBy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Guid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvoicePrefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OutputFileName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("ShowBillingCodesOnExcelExport")
                        .HasColumnType("bit");

                    b.Property<string>("StateProvince")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<double>("WithholdingTaxPercentage")
                        .HasColumnType("float");

                    b.HasKey("BillingEntityId");

                    b.ToTable("BillingEntities");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Campaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignId"));

                    b.Property<string>("CampaignName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CampaignNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CampaignOwnerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CampaignOwnerUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CampaignStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CampaignType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CampaignId")
                        .HasName("PK_tblCampaigns");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.CompanyCompetitor", b =>
                {
                    b.Property<int>("CompetitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompetitorId"));

                    b.Property<string>("BusinessDetails")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Competitor")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GlobalCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Mode")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.HasKey("CompetitorId");

                    b.ToTable("CompanyCompetitor", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.CompanyContactsImportRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<int>("CompletedCount")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuplicateCount")
                        .HasColumnType("int");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProcessDurationMs")
                        .HasColumnType("int")
                        .HasColumnName("ProcessDurationMS");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompanyContactsImportRequest", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.CompanyImportRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<int>("CompletedCount")
                        .HasColumnType("int");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RequestUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.Property<string>("UploadFileBlobReference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UploadFileContainerReference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CompanyImportRequest", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.CompanyLane", b =>
                {
                    b.Property<int>("CompanyLaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyLaneId"));

                    b.Property<string>("AccountOwner")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competitors")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ConsigneeCompany")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ContractEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ContractStart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<double>("CurrentRate")
                        .HasColumnType("float");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DeletedByIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationCountryCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DestinationCountryName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DestinationIataCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DestinationName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DestinationRegionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestinationRegionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DestinationUnlocoCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("FuelSurchargeIncluded")
                        .HasColumnType("bit");

                    b.Property<int>("GlobalCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Incumbent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsIncumbent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTarget")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Mode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OriginCountryCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OriginCountryName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OriginIataCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OriginName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OriginRegionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OriginRegionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OriginUnlocoCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("RequiredLt")
                        .HasColumnType("bit")
                        .HasColumnName("RequiredLT");

                    b.Property<int>("Rfqmonth")
                        .HasColumnType("int")
                        .HasColumnName("RFQMonth");

                    b.Property<string>("Service")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShipperCompany")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("TargetShippingFrequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("TargetVolumeAmount")
                        .HasColumnType("float");

                    b.Property<string>("TargetVolumeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TotalShippingFrequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("TotalVolumeAmount")
                        .HasColumnType("float");

                    b.Property<string>("TotalVolumeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompanyLaneId")
                        .HasName("PK_tblCompanyLanes");

                    b.ToTable("CompanyLanes");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.CompanyLinkType", b =>
                {
                    b.Property<int>("CompanyLinkTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyLinkTypeId"));

                    b.Property<string>("CompanyLinkTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompanyLinkTypeId")
                        .HasName("PK_CompanyLinkTypes_CompanyLinkTypeName");

                    b.ToTable("CompanyLinkTypes");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.CompanyWarehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseId"));

                    b.Property<int>("CompanyIdGlobal")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LastUpdatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseCategory")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("WarehouseIncumbentOrTarget")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("WarehouseLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("WarehouseSqMeters")
                        .HasColumnType("float");

                    b.HasKey("WarehouseId");

                    b.ToTable("CompanyWarehouses");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CountryDialingCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CountryIsoCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("Country_ISO_Code");

                    b.Property<string>("CountryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("DataCenter")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("DateFormat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("LocalCurrencyCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("RegionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RegionContinent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Timezone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CountryId");

                    b.HasIndex(new[] { "CountryCode" }, "IX_Countries_CountryCode");

                    b.HasIndex(new[] { "CountryName" }, "IX_Countries_CountryName");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CurrencyFormat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("SubUnitName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SubUnitRatio")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CurrencyId")
                        .HasName("PK_tblCurrencies");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.CurrencyExchangeRate", b =>
                {
                    b.Property<int>("CurrencyExchangeRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyExchangeRateId"));

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("ExchangeDate")
                        .HasColumnType("date");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float");

                    b.HasKey("CurrencyExchangeRateId")
                        .HasName("PK_tblCurrencyExchangeRates");

                    b.HasIndex(new[] { "CurrencyCode" }, "nci_wi_CurrencyExchangeRates_EDAD6F45D4D02C076C9C58D13BD92575");

                    b.ToTable("CurrencyExchangeRates");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.DealExchangeRateUpdateServiceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DealsUpdated")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ErrorDealsCount")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsError")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DealExchangeRateUpdateServiceLog", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("CalendarEventId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIdGlobal")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("ConversionDocumentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DocumentBlobContainer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocumentBlobReference")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DocumentFolderId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<int>("EmailId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GlobalContactId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<int>("QuoteIdGlobal")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UploadedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UploadedUserId")
                        .HasColumnType("int");

                    b.Property<int>("UploadedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex(new[] { "DocumentType", "UserIdGlobal", "Deleted" }, "nci_wi_Documents_12BC7D2D8FF84EFB343AFB585EAF55FF");

                    b.HasIndex(new[] { "CompanyIdGlobal", "DocumentType", "Deleted" }, "nci_wi_Documents_AA5E7D39B0953BDDB156723EC9BBF2CA");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DeleteExisting")
                        .HasColumnType("bit");

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentTypeText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblDocumentTypes");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailId"));

                    b.Property<string>("CcEmailAddresses")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Clicks")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIdGlobal")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateSent")
                        .HasColumnType("datetime");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<int>("DealIdGlobal")
                        .HasColumnType("int");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmailBodyHtml")
                        .HasColumnType("ntext");

                    b.Property<string>("EmailBodyText")
                        .HasColumnType("ntext");

                    b.Property<string>("EmailHeaders")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Error")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("FromEmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FromName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GlobalContactId")
                        .HasColumnType("int");

                    b.Property<bool>("IsError")
                        .HasColumnType("bit");

                    b.Property<string>("MailboxHash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Opens")
                        .HasColumnType("int");

                    b.Property<string>("RecipientEmailAddresses")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReplyToEmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SentByUserId")
                        .HasColumnType("int");

                    b.Property<int>("SentToContactId")
                        .HasColumnType("int");

                    b.Property<int>("SentToUserId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ToEmail")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UtcSentDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("EmailId");

                    b.HasIndex(new[] { "CompanyId" }, "IX_Emails_CompanyId");

                    b.HasIndex(new[] { "CompanyIdGlobal" }, "IX_Emails_CompanyIdGlobal");

                    b.HasIndex(new[] { "ContactId" }, "IX_Emails_ContactId");

                    b.HasIndex(new[] { "DealId" }, "IX_Emails_DealId");

                    b.HasIndex(new[] { "DealIdGlobal" }, "IX_Emails_DealIdGlobal");

                    b.HasIndex(new[] { "SubscriberId" }, "IX_Emails_SubscriberId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.EmailTemplate", b =>
                {
                    b.Property<int>("EmailTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailTemplateId"));

                    b.Property<int>("RefId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemplateTypeId")
                        .HasColumnType("int");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.ExchangeRatesLog", b =>
                {
                    b.Property<int>("ExchangeRatesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExchangeRatesLogId"));

                    b.Property<string>("ElapsedTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("ntext");

                    b.Property<int?>("RecordsAdded")
                        .HasColumnType("int");

                    b.Property<int?>("RecordsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("RecordsExported")
                        .HasColumnType("int");

                    b.Property<int?>("RecordsUpdated")
                        .HasColumnType("int");

                    b.Property<string>("ReturnMessage")
                        .HasColumnType("ntext");

                    b.Property<string>("RoutineName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoutineType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.HasKey("ExchangeRatesLogId");

                    b.ToTable("ExchangeRatesLog", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.ExchangeServerTimezone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExchangeServerTimeZone1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ExchangeServerTimeZone");

                    b.Property<string>("TimeZoneDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ExchangeServerTimezones");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.ExchangeSyncErrorLog", b =>
                {
                    b.Property<int>("ExchangeSyncErrorLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExchangeSyncErrorLogId"));

                    b.Property<string>("ErrorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ErrorDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoutineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoutineType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ExchangeSyncErrorLogId");

                    b.ToTable("ExchangeSyncErrorLog", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.ExchangeSyncLog", b =>
                {
                    b.Property<int>("ExchangeSyncLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExchangeSyncLogId"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SyncDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SyncMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SyncType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ExchangeSyncLogId");

                    b.ToTable("ExchangeSyncLog", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.ForgotPasswordRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DataCenter")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmailId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Processed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ForgotPasswordRequests");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.FreeTrialRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Converted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ConvertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CountryName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DataCenter")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailMessageId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FreeTrialCurrentStep")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FullName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Guid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VerifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_FreeTrialRequets");

                    b.ToTable("FreeTrialRequests");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalCompany", b =>
                {
                    b.Property<int>("GlobalCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlobalCompanyId"));

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("AdminOverideActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AdminOverideActiveDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Campaigns")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Claimed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ClaimedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ClaimedUserId")
                        .HasColumnType("int");

                    b.Property<int>("ClaimedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("ClaimedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CompanyOwnerUserId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyOwnerUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CompanySegmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyTypes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Competitors")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ConversionAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ConversionGlobalCompanyDataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ConversionGlobalCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ConversionLeadId")
                        .HasColumnType("int");

                    b.Property<string>("ConversionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreditLimit")
                        .HasColumnType("int");

                    b.Property<double>("CurrentYearAirTonnageShare")
                        .HasColumnType("float");

                    b.Property<double>("CurrentYearAirTonnageTotal")
                        .HasColumnType("float");

                    b.Property<double>("CurrentYearOceanTeushare")
                        .HasColumnType("float")
                        .HasColumnName("CurrentYearOceanTEUShare");

                    b.Property<double>("CurrentYearOceanTeutotal")
                        .HasColumnType("float")
                        .HasColumnName("CurrentYearOceanTEUTotal");

                    b.Property<string>("DataCenter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DataCenterConversionAddedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCenterConversionUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DigitalAddress")
                        .HasMaxLength(700)
                        .HasColumnType("nvarchar(700)");

                    b.Property<string>("Division")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GlobalCompanyOwnerGlobalUserId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCompanyOwnerGlobalUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GlobalCompanyOwnerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Incoterms")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Industries")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Industry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastActivityDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("LastCreditUpdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LinkedUserEmails")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LinkedUserNames")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MajorProducts")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("NextActivityDate")
                        .HasColumnType("datetime");

                    b.Property<double>("NextYearAirTonnageObjective")
                        .HasColumnType("float");

                    b.Property<double>("NextYearOceanTeuobjective")
                        .HasColumnType("float")
                        .HasColumnName("NextYearOceanTEUObjective");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PrimaryContactId")
                        .HasColumnType("int");

                    b.Property<int>("PrimaryGlobalContactId")
                        .HasColumnType("int");

                    b.Property<string>("SalesTeam")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceDataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SourceDataCenterCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("SourceSubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("StateProvince")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StrategicSalesPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GlobalCompanyId");

                    b.HasIndex(new[] { "Active" }, "IX_GlobalCompanies_Active");

                    b.HasIndex(new[] { "CompanyId" }, "IX_GlobalCompanies_CompanyId");

                    b.HasIndex(new[] { "CompanyName" }, "IX_GlobalCompanies_CompanyName");

                    b.HasIndex(new[] { "CountryName" }, "IX_GlobalCompanies_CountryName");

                    b.HasIndex(new[] { "DataCenter" }, "IX_GlobalCompanies_DataCenter");

                    b.HasIndex(new[] { "EmailAddress" }, "IX_GlobalCompanies_EmailAddress");

                    b.HasIndex(new[] { "LastActivityDate" }, "IX_GlobalCompanies_LastActivityDate");

                    b.HasIndex(new[] { "NextActivityDate" }, "IX_GlobalCompanies_NextActivityDate");

                    b.HasIndex(new[] { "GlobalCompanyOwnerGlobalUserId" }, "IX_GlobalCompanies_OwnerGlobalUserId");

                    b.HasIndex(new[] { "SalesTeam" }, "IX_GlobalCompanies_SalesTeam");

                    b.HasIndex(new[] { "SubscriberId" }, "IX_GlobalCompanies_SubscriberId");

                    b.HasIndex(new[] { "Active", "Deleted" }, "nci_wi_GlobalCompanies_10CA500D7223E2EC91B667A7C5E858F6");

                    b.HasIndex(new[] { "Active", "Deleted" }, "nci_wi_GlobalCompanies_290F1424F11953EABF953389262563A0");

                    b.HasIndex(new[] { "Deleted" }, "nci_wi_GlobalCompanies_48F29F86A3977830A905D27754C3583B");

                    b.HasIndex(new[] { "Active", "CompanyOwnerUserIdGlobal" }, "nci_wi_GlobalCompanies_901C83189E4E682D3B6CCD676ACEDFF1");

                    b.HasIndex(new[] { "SubscriberId", "Active", "Deleted" }, "nci_wi_GlobalCompanies_C1885F9E5C5DFACE2377DD372D5C2208");

                    b.ToTable("GlobalCompanies");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalCompanyAccessRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AcceptedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CompanyOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("GlobalCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("RequestedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RequestedGlobalUserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tbl_GlobalCompanyAccessRequest");

                    b.ToTable("GlobalCompanyAccessRequest", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalContact", b =>
                {
                    b.Property<int>("GlobalContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlobalContactId"));

                    b.Property<int>("BirthdayDay")
                        .HasColumnType("int");

                    b.Property<int>("BirthdayMonth")
                        .HasColumnType("int");

                    b.Property<string>("BusinessAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BusinessCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BusinessCountry")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BusinessPhone")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("BusinessPhone2")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("BusinessPostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BusinessStateProvince")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CampaignName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ChildrenNames")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ContactOwnerUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("ContactSource")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContactType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ConversionContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DecisionRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DigitalAddress")
                        .HasMaxLength(700)
                        .HasColumnType("nvarchar(700)");

                    b.Property<string>("Email")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ExchangeContactId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ExchangeSyncLastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("FormerEmployee")
                        .HasColumnType("bit");

                    b.Property<int>("GlobalCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("GoogleContactId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("GoogleSyncLastModified")
                        .HasColumnType("datetime");

                    b.Property<bool>("HasChildern")
                        .HasColumnType("bit");

                    b.Property<string>("Hobbies")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("HolidayCards")
                        .HasColumnType("bit");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HomeCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HomeCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("HomePostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HomeStateProvince")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Married")
                        .HasColumnType("bit");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("NextActivityDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("OkToCall")
                        .HasColumnType("bit");

                    b.Property<string>("OriginSystem")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PreviousEmployees")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("PrivateContact")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<string>("RelatedContacts")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SalesTeam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Salutation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Source")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpouseName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("SyncType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tags")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GlobalContactId");

                    b.ToTable("GlobalContacts");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalDeal", b =>
                {
                    b.Property<int>("DealIdGlobal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DealIdGlobal"));

                    b.Property<string>("Campaign")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Cbms")
                        .HasColumnType("float")
                        .HasColumnName("CBMs");

                    b.Property<double>("CbmsSpot")
                        .HasColumnType("float")
                        .HasColumnName("CBMsSpot");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommissionStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CommissionType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Commodities")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Competitors")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ConsigneeNames")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ContractStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConversionGlobalDealDataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ConversionGlobalDealId")
                        .HasColumnType("int");

                    b.Property<int>("CopiedGlobalDealId")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CountryName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DataCenter")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("DateLost")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateProposalDue")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateWon")
                        .HasColumnType("datetime");

                    b.Property<string>("DealCountryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DealDescription")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<string>("DealName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DealNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DealOwnerIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DealOwnerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DealOwnerUserId")
                        .HasColumnType("int");

                    b.Property<string>("DealSource")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DealType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationCountries")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("DestinationLocations")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("DestinationRegions")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("DistrictCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DistrictName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EstimatedStartDate")
                        .HasColumnType("datetime");

                    b.Property<double>("Feus")
                        .HasColumnType("float")
                        .HasColumnName("FEUs");

                    b.Property<double>("FeusSpot")
                        .HasColumnType("float")
                        .HasColumnName("FEUsSpot");

                    b.Property<string>("Incoterms")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Kgs")
                        .HasColumnType("float");

                    b.Property<double>("KgsSpot")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastExchangeRateAppliedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<double>("Lbs")
                        .HasColumnType("float");

                    b.Property<double>("LbsSpot")
                        .HasColumnType("float");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NextActivityDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OrignCountries")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("OrignLocations")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("OrignRegions")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<int>("PrimaryContactId")
                        .HasColumnType("int");

                    b.Property<int>("PrimaryContactIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryContactName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<double>("ProfitPercentage")
                        .HasColumnType("float");

                    b.Property<double>("ProfitUsd")
                        .HasColumnType("float")
                        .HasColumnName("ProfitUSD");

                    b.Property<double>("ProfitUsdspot")
                        .HasColumnType("float")
                        .HasColumnName("ProfitUSDSpot");

                    b.Property<string>("ReasonWonLost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegionCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RegionName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Revenue")
                        .HasColumnType("float");

                    b.Property<double>("RevenueUsd")
                        .HasColumnType("float")
                        .HasColumnName("RevenueUSD");

                    b.Property<double>("RevenueUsdspot")
                        .HasColumnType("float")
                        .HasColumnName("RevenueUSDSpot");

                    b.Property<int>("SalesStageId")
                        .HasColumnType("int");

                    b.Property<string>("SalesStageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalesTeam")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Services")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ShipperNames")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("SourceDataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SourceDataCenterDealId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceSubscriberId")
                        .HasColumnType("int");

                    b.Property<bool>("SpotDeal")
                        .HasColumnType("bit");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Teus")
                        .HasColumnType("float")
                        .HasColumnName("TEUs");

                    b.Property<double>("TeusSpot")
                        .HasColumnType("float")
                        .HasColumnName("TEUsSpot");

                    b.Property<double>("Tonnes")
                        .HasColumnType("float");

                    b.Property<double>("TonnesSpot")
                        .HasColumnType("float");

                    b.Property<DateTime?>("TransferredDate")
                        .HasColumnType("datetime");

                    b.Property<double>("Trucks")
                        .HasColumnType("float");

                    b.Property<double>("TrucksSpot")
                        .HasColumnType("float");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("WonExchangeRate")
                        .HasColumnType("float");

                    b.HasKey("DealIdGlobal")
                        .HasName("PK_GlobalDeals_DealIdGlobal");

                    b.HasIndex(new[] { "CompanyIdGlobal" }, "IX_GlobalDeals_CompanyIdGlobal");

                    b.HasIndex(new[] { "CompanyIdGlobal" }, "IX_GlobalDeals_Company_Id_Global");

                    b.HasIndex(new[] { "ContractEndDate" }, "IX_GlobalDeals_ContractEndDate");

                    b.HasIndex(new[] { "ContractStartDate" }, "IX_GlobalDeals_ContractStartDate");

                    b.HasIndex(new[] { "CountryName" }, "IX_GlobalDeals_CountryName");

                    b.HasIndex(new[] { "DataCenter" }, "IX_GlobalDeals_DataCenter");

                    b.HasIndex(new[] { "DateLost" }, "IX_GlobalDeals_DateLost");

                    b.HasIndex(new[] { "DealOwnerIdGlobal" }, "IX_GlobalDeals_DealOwnerIdGlobal");

                    b.HasIndex(new[] { "DealOwnerName" }, "IX_GlobalDeals_DealOwnerName");

                    b.HasIndex(new[] { "DealOwnerUserId" }, "IX_GlobalDeals_DealOwnerUserId");

                    b.HasIndex(new[] { "DecisionDate" }, "IX_GlobalDeals_DecisionDate");

                    b.HasIndex(new[] { "DistrictCode" }, "IX_GlobalDeals_DistrictCode");

                    b.HasIndex(new[] { "DistrictName" }, "IX_GlobalDeals_DistrictName");

                    b.HasIndex(new[] { "EstimatedStartDate" }, "IX_GlobalDeals_EstimatedStartDate");

                    b.HasIndex(new[] { "Industry" }, "IX_GlobalDeals_Industry");

                    b.HasIndex(new[] { "LastActivityDate" }, "IX_GlobalDeals_LastActivityDate");

                    b.HasIndex(new[] { "LocationCode" }, "IX_GlobalDeals_LocationCode");

                    b.HasIndex(new[] { "LocationName" }, "IX_GlobalDeals_LocationName");

                    b.HasIndex(new[] { "NextActivityDate" }, "IX_GlobalDeals_NextActivityDate");

                    b.HasIndex(new[] { "RegionCode" }, "IX_GlobalDeals_RegionCode");

                    b.HasIndex(new[] { "RegionName" }, "IX_GlobalDeals_RegionName");

                    b.HasIndex(new[] { "SalesStageName" }, "IX_GlobalDeals_SalesStageName");

                    b.HasIndex(new[] { "SubscriberId" }, "IX_GlobalDeals_SubscriberId");

                    b.HasIndex(new[] { "Deleted", "SalesStageName", "CompanyIdGlobal" }, "nci_wi_GlobalDeals_657E462AACFA95127F6F30B78A435768");

                    b.HasIndex(new[] { "DealId", "SubscriberId" }, "nci_wi_GlobalDeals_6C599615C8130DBA7C8610E563FBABC0");

                    b.ToTable("GlobalDeals");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalLane", b =>
                {
                    b.Property<int>("LaneId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeCompany")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("CustomerPickUpAtWarehouse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("DeletedByIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationCountryCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DestinationCountryName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DestinationIataCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DestinationName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DestinationRegionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestinationRegionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DestinationUnlocoCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("GlobalDealId")
                        .HasColumnType("int");

                    b.Property<int>("GlobalLaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlobalLaneId"));

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Mode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OriginCountryCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OriginCountryName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OriginIataCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OriginName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OriginRegionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OriginRegionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OriginUnlocoCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartnerAtDestination")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerAtOrigin")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerDestinationCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerDestinationCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PartnerDestinationContact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerDestinationCountryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartnerDestinationEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartnerDestinationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerDestinationNameOther")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerDestinationPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartnerOriginCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerOriginCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PartnerOriginContact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerOriginCountryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartnerOriginEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartnerOriginName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerOriginNameOther")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartnerOriginPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("ProfitAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<double>("ProfitPercent")
                        .HasColumnType("float");

                    b.Property<string>("ProfitUnitOfMeasure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReceiveFrom3Pl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ReceiveFrom3PL");

                    b.Property<bool>("RequiresBarcode")
                        .HasColumnType("bit");

                    b.Property<double>("Revenue")
                        .HasColumnType("float");

                    b.Property<double>("RevenueUsd")
                        .HasColumnType("float")
                        .HasColumnName("RevenueUSD");

                    b.Property<string>("Service")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShipperCompany")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShippingFrequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpecialRequirements")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<double>("TotalLaneProfit")
                        .HasColumnType("float");

                    b.Property<double>("TotalLaneProfitUsd")
                        .HasColumnType("float")
                        .HasColumnName("TotalLaneProfitUSD");

                    b.Property<bool>("TrackAndTrace")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TransferredDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("VolumeAmount")
                        .HasColumnType("float");

                    b.Property<string>("VolumeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LaneId")
                        .HasName("PK_tblDealGlobalLanes");

                    b.ToTable("GlobalLanes");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalLocation", b =>
                {
                    b.Property<int>("GlobalLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlobalLocationId"));

                    b.Property<bool>("Airport")
                        .HasColumnType("bit");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IataCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("InlandPort")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LocationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("MultiModal")
                        .HasColumnType("bit");

                    b.Property<bool>("RailTerminal")
                        .HasColumnType("bit");

                    b.Property<bool>("RoadTerminal")
                        .HasColumnType("bit");

                    b.Property<bool>("SeaPort")
                        .HasColumnType("bit");

                    b.Property<string>("UnlocoCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GlobalLocationId");

                    b.HasIndex(new[] { "CountryCode" }, "IX_GlobalLocations_CountryCode");

                    b.HasIndex(new[] { "CountryName" }, "IX_GlobalLocations_CountryName");

                    b.HasIndex(new[] { "LocationCode" }, "IX_GlobalLocations_LocationCode");

                    b.HasIndex(new[] { "LocationName" }, "IX_GlobalLocations_LocationName");

                    b.ToTable("GlobalLocations");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalQuote", b =>
                {
                    b.Property<int>("QuoteIdGlobal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuoteIdGlobal"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("ContactIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("DealId")
                        .HasColumnType("int");

                    b.Property<int?>("DealIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DealName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OwnerUserId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("OwnerUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("QuoteAmount")
                        .HasColumnType("money");

                    b.Property<string>("QuoteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuoteConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuoteDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuoteMode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuoteName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuoteNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuoteStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("QuoteValidFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("QuoteValidTo")
                        .HasColumnType("datetime");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("QuoteIdGlobal");

                    b.ToTable("GlobalQuotes");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalUser", b =>
                {
                    b.Property<int>("GlobalUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlobalUserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("AdminUser")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowSubscriberCommission")
                        .HasColumnType("bit");

                    b.Property<string>("AppCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BillingCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BillingEntityId")
                        .HasColumnType("int");

                    b.Property<string>("BrowserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BrowserVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ConversionUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("CustomerProfileActive")
                        .HasColumnType("bit");

                    b.Property<string>("DataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateFormat")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DateFormatReports")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("DefaultReminderMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedGlobalUserId")
                        .HasColumnType("int");

                    b.Property<int>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayLanguage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistrictCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DistrictName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmailActivityReminderMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("EmailActivityReminders")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EmailDigest")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("EmailSummaryDaily")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EmailSummaryLastSent")
                        .HasColumnType("datetime");

                    b.Property<bool>("EnableO365sync")
                        .HasColumnType("bit")
                        .HasColumnName("EnableO365Sync");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GoogleCalendarEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GoogleRefreshToken")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GoogleSyncToken")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("LanguageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LanguagesSpoken")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LoginEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("LoginFailures")
                        .HasColumnType("int");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PasswordHashed")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneExtension")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Preferences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Quoting")
                        .HasColumnType("bit");

                    b.Property<string>("RegionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RegionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ScreenResolution")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SignatureImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatureText")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("StateProvince")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("SubscriberName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("SyncAppointmentsLastDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SyncContactsLastDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SyncEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("SyncIsLegacy")
                        .HasColumnType("bit");

                    b.Property<bool>("SyncOnlyCrmCategoryItems")
                        .HasColumnType("bit");

                    b.Property<string>("SyncPassword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SyncPasswordHashed")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SyncState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncTasksLastDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SyncType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SyncUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TimeZoneCityNames")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TimeZoneExchange")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TimeZoneOffset")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UserActivationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UserDeactivationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserGuid")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserRoles")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Version")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("VisitReportEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("WorkflowEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("WorkflowSettings")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GlobalUserId");

                    b.HasIndex(new[] { "LoginEnabled", "SubscriberId", "CountryName", "Deleted" }, "nci_wi_GlobalUsers_D0465F9776D4D05E984BA01FDBE215EB");

                    b.ToTable("GlobalUsers");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalUserActivationsDeactivation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActivatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("ActivatedByUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ActivatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeactivatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeactivatedByUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeactivatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_UserActivationHistory");

                    b.ToTable("GlobalUserActivationsDeactivations");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GlobalUserActivity", b =>
                {
                    b.Property<int>("GlobalUserActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlobalUserActivityId"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("ActivityType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ContactSubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("DealName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("FilterId")
                        .HasColumnType("int");

                    b.Property<string>("FilterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GlobalCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("GlobalContactId")
                        .HasColumnType("int");

                    b.Property<int?>("GlobalDealId")
                        .HasColumnType("int");

                    b.Property<string>("LogData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteContent")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("QuoteIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("QuoteName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("SubscriberName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TaskName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UserActivityId")
                        .HasColumnType("int");

                    b.Property<string>("UserActivityMessage")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("UserActivityTimestamp")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GlobalUserActivityId")
                        .HasName("PK_UserActivity");

                    b.HasIndex(new[] { "ContactId", "ContactSubscriberId" }, "IX_GlobalUserActivity");

                    b.HasIndex(new[] { "GlobalCompanyId" }, "IX_GlobalUserActivity_GlobalCompanyId");

                    b.HasIndex(new[] { "GlobalDealId" }, "IX_GlobalUserActivity_GlobalDealId");

                    b.HasIndex(new[] { "SubscriberId", "UserActivityId" }, "nci_wi_GlobalUserActivity_E3803A753DEEC594BA26CCC96E2788F0");

                    b.ToTable("GlobalUserActivity", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GoogleSyncErrorLog", b =>
                {
                    b.Property<int>("GoogleSyncErrorLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoogleSyncErrorLogId"));

                    b.Property<int?>("ErrorCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ErrorDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("ntext");

                    b.Property<int?>("GoogleSyncLogId")
                        .HasColumnType("int");

                    b.Property<string>("ReturnMessage")
                        .HasColumnType("ntext");

                    b.Property<string>("RoutineName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoutineType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserIdGlobal")
                        .HasColumnType("int");

                    b.HasKey("GoogleSyncErrorLogId");

                    b.ToTable("GoogleSyncErrorLog", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.GoogleSyncLog", b =>
                {
                    b.Property<int>("GoogleSyncLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoogleSyncLogId"));

                    b.Property<int?>("AppointmentsAddedToCrm")
                        .HasColumnType("int");

                    b.Property<int?>("AppointmentsAddedToSync")
                        .HasColumnType("int");

                    b.Property<int?>("AppointmentsUpdatedInCrm")
                        .HasColumnType("int");

                    b.Property<int?>("AppointmentsUpdatedInSync")
                        .HasColumnType("int");

                    b.Property<int?>("ContactsAddedToCrm")
                        .HasColumnType("int");

                    b.Property<int?>("ContactsAddedToSync")
                        .HasColumnType("int");

                    b.Property<int?>("ContactsDeletedInCrm")
                        .HasColumnType("int");

                    b.Property<int?>("ContactsDeletedInSync")
                        .HasColumnType("int");

                    b.Property<int?>("ContactsUpdatedInCrm")
                        .HasColumnType("int");

                    b.Property<int?>("ContactsUpdatedInSync")
                        .HasColumnType("int");

                    b.Property<string>("ElapsedTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SyncStartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SyncType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TasksAddedToCrm")
                        .HasColumnType("int");

                    b.Property<int?>("TasksAddedToSync")
                        .HasColumnType("int");

                    b.Property<int?>("TasksUpdatedInCrm")
                        .HasColumnType("int");

                    b.Property<int?>("TasksUpdatedInSync")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GoogleSyncLogId")
                        .HasName("PK_tblGoogleSyncLog");

                    b.ToTable("GoogleSyncLog", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Incoterm", b =>
                {
                    b.Property<int>("IncotermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncotermId"));

                    b.Property<string>("CarriageToPlaceOfDestination")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CarriageToPortOfExport")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CarriageToPortOfImport")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CarrierLoadOnTruck")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ExportCustomsDeclaration")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ImportCustomsClearance")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ImportTaxes")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Incoterm1")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("Incoterm");

                    b.Property<string>("Insurance")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LoadingChargesInPortOfExport")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LoadingOnTruckInPortOfIimport")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UnloadTruckInPortOfExport")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UnloadingChargesInPortOfImport")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IncotermId");

                    b.ToTable("Incoterms");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<string>("AddressBlock")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("BillingContactId")
                        .HasColumnType("int");

                    b.Property<int>("BillingEntityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactFullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ExcelDocumentId")
                        .HasColumnType("int");

                    b.Property<string>("ExcelUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<double>("InvoiceAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceGuid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InvoiceMonth")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvoiceText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InvoiceYear")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<double>("MonthlyUserFee")
                        .HasColumnType("float");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PdfDocumentId")
                        .HasColumnType("int");

                    b.Property<string>("PdfUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("WithholdingTaxAmount")
                        .HasColumnType("float");

                    b.Property<double>("WithholdingTaxPercentage")
                        .HasColumnType("float");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.InvoiceActiveUser", b =>
                {
                    b.Property<int>("InvoiceActiveUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceActiveUserId"));

                    b.Property<string>("BillingCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CountryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceMonth")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InvoiceYear")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("LocationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriberCompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UserActivationDate")
                        .HasColumnType("datetime");

                    b.Property<double>("UserBilledAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UserDeactivationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InvoiceActiveUserId");

                    b.ToTable("InvoiceActiveUsers");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.InvoiceContact", b =>
                {
                    b.Property<int>("InvoiceContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceContactId"));

                    b.Property<int>("BillingContactId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceContactId")
                        .HasName("PK_InvoiceContact");

                    b.ToTable("InvoiceContacts");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.InvoiceEmail", b =>
                {
                    b.Property<int>("InvoiceEmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceEmailId"));

                    b.Property<string>("EmailBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("SentBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subject")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("InvoiceEmailId");

                    b.ToTable("InvoiceEmail", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.InvoiceSent", b =>
                {
                    b.Property<int>("InvoiceSentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceSentId"));

                    b.Property<int>("BillingContactId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FullName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("InvoiceEmailId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("SentBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ToCcBcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InvoiceSentId");

                    b.ToTable("InvoiceSent", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.InvoiceStatus", b =>
                {
                    b.Property<int>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceStatus1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("InvoiceStatus");

                    b.HasKey("InvoiceStatusId");

                    b.ToTable("InvoiceStatus", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.InvoiceStatusHistory", b =>
                {
                    b.Property<int>("InvoiceStatusHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceStatusHistoryId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceStatusHistoryId");

                    b.ToTable("InvoiceStatusHistory", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("LanguageCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("LanguageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LanguageId")
                        .HasName("PK_tblLanguages");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LanguagePhrase", b =>
                {
                    b.Property<int>("LanguagePhraseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguagePhraseId"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("DeletedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedByUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LanguagePhrase1")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LanguagePhrase");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LanguagePhraseId")
                        .HasName("PK_tblLanguagePhrases");

                    b.HasIndex(new[] { "LanguagePhrase1" }, "IX_LanguagePhrases_LanguagePhrase");

                    b.ToTable("LanguagePhrases");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LanguageTranslation", b =>
                {
                    b.Property<int>("LanguageTranslationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageTranslationId"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LanguageCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("LanguageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LanguagePhrase")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Translation")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.Property<int?>("VerifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("VerifiedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LanguageTranslationId")
                        .HasName("PK_tblLanguageTranslations");

                    b.HasIndex(new[] { "LanguageCode" }, "IX_LanguageTranslations_LanguageCode");

                    b.HasIndex(new[] { "LanguageName" }, "IX_LanguageTranslations_LanguageName");

                    b.HasIndex(new[] { "LanguagePhrase" }, "IX_LanguageTranslations_LanguagePhrase");

                    b.HasIndex(new[] { "Translation" }, "IX_LanguageTranslations_Translation");

                    b.HasIndex(new[] { "LanguageCode", "Verified" }, "nci_wi_LanguageTranslations_098F508CEAB243DBB7076C569079F80D");

                    b.ToTable("LanguageTranslations");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkActivityToDeal", b =>
                {
                    b.Property<int>("LinkActivityToDealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkActivityToDealId"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<int>("DealIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DealName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DealSubscriberId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LinkActivityToDealId");

                    b.HasIndex(new[] { "ActivityId" }, "IX_LinkActivityToDeal_ActivityId");

                    b.HasIndex(new[] { "DealId", "Deleted" }, "nci_wi_LinkActivityToDeal_95ADA3F32612F23AC634480012EF864A");

                    b.ToTable("LinkActivityToDeal", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkCompanyToCompany", b =>
                {
                    b.Property<int>("LinkCompanyToCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkCompanyToCompanyId"));

                    b.Property<int>("CompanyIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<int>("LinkTypeId")
                        .HasColumnType("int");

                    b.Property<string>("LinkTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LinkedCompanyIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("LinkedCompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerApprovalGuid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerApprovalStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("OwnerApproved")
                        .HasColumnType("bit");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LinkCompanyToCompanyId")
                        .HasName("PK_LinkCompanyCompany");

                    b.HasIndex(new[] { "CompanyIdGlobal" }, "IX_LinkCompanyToCompanyCompanyIdGlobal");

                    b.HasIndex(new[] { "LinkedCompanyIdGlobal" }, "IX_LinkCompanyToCompany_LinkedCompanyIdGlobal");

                    b.HasIndex(new[] { "SubscriberId" }, "IX_LinkCompanyToCompany_SubscriberId");

                    b.ToTable("LinkCompanyToCompany", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkCountryRegion", b =>
                {
                    b.Property<int>("LinkCountryRegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkCountryRegionId"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CountryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("RegionCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RegionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LinkCountryRegionId");

                    b.HasIndex(new[] { "CountryCode" }, "IX_LinkCountryRegion_CountryCode");

                    b.HasIndex(new[] { "CountryName" }, "IX_LinkCountryRegion_CountryName");

                    b.HasIndex(new[] { "RegionName" }, "IX_LinkCountryRegion_RegionName");

                    b.HasIndex(new[] { "SubscriberId" }, "IX_LinkCountryRegion_SubscriberId");

                    b.ToTable("LinkCountryRegion", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkGlobalCompanyGlobalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanySubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GlobalCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalCompanyName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("GlobalUserId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalUserName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("InviteAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("InviteGuid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InviteStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LinkType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SalesTeamRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("UserSubscriberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Deleted" }, "nci_wi_LinkGlobalCompanyGlobalUser_3385453A2252F86AC242B7E00D5F7325");

                    b.HasIndex(new[] { "GlobalCompanyId", "GlobalUserId", "Deleted" }, "nci_wi_LinkGlobalCompanyGlobalUser_4E279FADEDC4F2E729C9FEC27DF370BB");

                    b.HasIndex(new[] { "Deleted" }, "nci_wi_LinkGlobalCompanyGlobalUser_C51D1C0979FF3B8D209398E00848236E");

                    b.HasIndex(new[] { "GlobalUserId", "GlobalCompanyId", "Deleted" }, "nci_wi_LinkGlobalCompanyGlobalUser_CB1A5B3EE57547D4C99AD3C4397A56A9");

                    b.ToTable("LinkGlobalCompanyGlobalUser", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkGlobalContactToCompany", b =>
                {
                    b.Property<int>("LinkGlobalContactToCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkGlobalContactToCompanyId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GlobalCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("GlobalContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("LinkType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LinkGlobalContactToCompanyId");

                    b.ToTable("LinkGlobalContactToCompany", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkGlobalContactToDeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DealName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GlobalContactId")
                        .HasColumnType("int");

                    b.Property<int>("GlobalDealId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LinkType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_GlobalDealLinkContact");

                    b.ToTable("LinkGlobalContactToDeal", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkGlobalDealGlobalUser", b =>
                {
                    b.Property<int>("LinkGloablDealGlobalUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkGloablDealGlobalUserId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DealSubscriberId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GlobalDealId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalDealName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("GlobalUserId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalUserName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("InviteAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("InviteGuid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InviteStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("LinkType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SalesTeamRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserSubscriberId")
                        .HasColumnType("int");

                    b.HasKey("LinkGloablDealGlobalUserId");

                    b.HasIndex(new[] { "GlobalDealId", "GlobalUserId", "Deleted" }, "nci_wi_LinkGlobalDealGlobalUser_41FA358F80584D7D7BE5149D7D47109F");

                    b.ToTable("LinkGlobalDealGlobalUser", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkGlobalSuscriberToSubscriber", b =>
                {
                    b.Property<int>("LinkGlobalSubscriberToSubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkGlobalSubscriberToSubscriberId"));

                    b.Property<string>("DataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GlobalSubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("LinkedSubscriberId")
                        .HasColumnType("int");

                    b.HasKey("LinkGlobalSubscriberToSubscriberId")
                        .HasName("PK_Table_1");

                    b.ToTable("LinkGlobalSuscriberToSubscriber", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkGlobalUserToGlobalContact", b =>
                {
                    b.Property<int>("LinkUserToGlobalContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkUserToGlobalContactId"));

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GlobalContactId")
                        .HasColumnType("int");

                    b.Property<bool>("InviteAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("InviteGuid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InviteStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LinkType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SalesTeamRole")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserSubscriberId")
                        .HasColumnType("int");

                    b.HasKey("LinkUserToGlobalContactId");

                    b.ToTable("LinkGlobalUserToGlobalContact", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkGlobalUserToGlobalManager", b =>
                {
                    b.Property<int>("LinkGlobalUserToGlobalManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkGlobalUserToGlobalManagerId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedGlobalUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<int>("GlobalUserId")
                        .HasColumnType("int");

                    b.Property<int>("GlobalUserSubscriberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ManagerGlobalUserId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerGlobalUserSubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("ManagerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManagerType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdateGlobalUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LinkGlobalUserToGlobalManagerId")
                        .HasName("PK_tblLinkManagersSalesReps");

                    b.ToTable("LinkGlobalUserToGlobalManager", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.LinkGlobalUserToManagingCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("GlobalUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LinkGlobalUserToManagingCountry", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageCcglobalUsers")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MessageCCGlobalUsers");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageContentType")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("MessageEmailData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MessageFilterCompanyIdGlobal")
                        .HasColumnType("int");

                    b.Property<int?>("MessageFilterContactId")
                        .HasColumnType("int");

                    b.Property<string>("MessageFilterData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MessageFilterDealId")
                        .HasColumnType("int");

                    b.Property<int>("MessageFilterGlobalContactId")
                        .HasColumnType("int");

                    b.Property<string>("MessageGuid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageReceviedDeletedGlobalUsers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MessageSentDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MessageSentDeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("MessageSentDeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("MessageSentDeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MessageToUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("MessageToUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MessageType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.OutlookCategoryColor", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HexColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rgb")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RGB");

                    b.HasKey("CategoryId");

                    b.ToTable("OutlookCategoryColors");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.ReassignUserRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompaniesFound")
                        .HasColumnType("int");

                    b.Property<int>("CompaniesTransferred")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ContactsFound")
                        .HasColumnType("int");

                    b.Property<int>("ContactsTransferred")
                        .HasColumnType("int");

                    b.Property<string>("CurrentProcessingType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DealsFound")
                        .HasColumnType("int");

                    b.Property<int>("DealsTransferred")
                        .HasColumnType("int");

                    b.Property<int>("DepartingUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<int>("EventsFound")
                        .HasColumnType("int");

                    b.Property<int>("EventsTransferred")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NewUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RequestedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<int>("TasksFound")
                        .HasColumnType("int");

                    b.Property<int>("TasksTransferred")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReassignUserRequest", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RegionManagerUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RegionId")
                        .HasName("PK_tblRegions");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.ReportFilter", b =>
                {
                    b.Property<int>("FilterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilterId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FilterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReportType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FilterId");

                    b.ToTable("ReportFilters");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.SalesTeamRole", b =>
                {
                    b.Property<int>("SalesTeamRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesTeamRoleId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("SalesTeamRole1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SalesTeamRole");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SalesTeamRoleId")
                        .HasName("PK_SalesTeamRoleId");

                    b.ToTable("SalesTeamRoles");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Subscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AirVolumeDisplay")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("AllowSubscriberCommission")
                        .HasColumnType("bit");

                    b.Property<bool?>("Billable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("BillingCurrencyCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("(N'US')");

                    b.Property<string>("BillingCurrencySymbol")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasDefaultValueSql("(N'$')");

                    b.Property<string>("BillingFrequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("BillingUserRate")
                        .HasColumnType("money");

                    b.Property<decimal?>("BillingUserReadOnlyRate")
                        .HasColumnType("money");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyCodeText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CompanyParentCodeText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConversionDataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ConversionSubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'United States')");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CrmAdminEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("CustomerProfileActive")
                        .HasColumnType("bit");

                    b.Property<string>("DataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultDateFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'dd/mm/yyyy')");

                    b.Property<int>("DefaultLeadResponseDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("DefaultReportCurrencyCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("(N'US')");

                    b.Property<string>("DefaultReportDateFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'dd/mmm/yyyy')");

                    b.Property<string>("DefaultShippingFrequency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'Per Year')");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayTotalsValueFrequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailDisclaimer")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("EmailFrom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExchangeDomain")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExchangeServerTimeZone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExchangeUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("FreeTrial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("LogonUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Quoting")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowBillingCodesOnExcelExport")
                        .HasColumnType("bit");

                    b.Property<string>("SsoApiKey")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StateProvince")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubDomain")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriberApiKey")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SubscriberGuid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriberIpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriberType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SyncServiceDomain")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SyncServicePassword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SyncServiceUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SyncServiceUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SyncType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserLimit")
                        .HasColumnType("int");

                    b.HasKey("SubscriberId");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.SubscriberTransfer", b =>
                {
                    b.Property<int>("SubscriberTransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriberTransferId"));

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DestinationDataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DestinationSubscriberId")
                        .HasColumnType("int");

                    b.Property<bool>("EnabledUsers")
                        .HasColumnType("bit");

                    b.Property<string>("Guid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceDataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SourceSubscriberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TransferredAdminUserId")
                        .HasColumnType("int");

                    b.HasKey("SubscriberTransferId");

                    b.ToTable("SubscriberTransfer", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.SubscriberTransferStep", b =>
                {
                    b.Property<int>("SubscriberTransferStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriberTransferStepId"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<string>("StepStr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SubscriberTransferId")
                        .HasColumnType("int");

                    b.Property<int>("TotalFound")
                        .HasColumnType("int");

                    b.Property<int>("TotalTransferredCount")
                        .HasColumnType("int");

                    b.HasKey("SubscriberTransferStepId");

                    b.HasIndex("SubscriberTransferId");

                    b.ToTable("SubscriberTransferStep", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.SubscriberTransferStepError", b =>
                {
                    b.Property<int>("SubscriberTransferStepErrorId")
                        .HasColumnType("int");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefId")
                        .HasColumnType("int");

                    b.Property<string>("RefType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SubscriberTransferStepId")
                        .HasColumnType("int");

                    b.HasKey("SubscriberTransferStepErrorId");

                    b.HasIndex("SubscriberTransferStepId");

                    b.ToTable("SubscriberTransferStepError", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.SwitchUserRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminUserId")
                        .HasColumnType("int");

                    b.Property<bool>("Expired")
                        .HasColumnType("bit");

                    b.Property<string>("Guid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SwitchDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SwitchToGlobalUserDataCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SwitchToGlobalUserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_SwitchUserSession");

                    b.ToTable("SwitchUserRequest", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.TableStatus", b =>
                {
                    b.Property<int>("TableStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableStatusId"));

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastUpdateUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TableStatusId");

                    b.ToTable("TableStatus", (string)null);
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.Text", b =>
                {
                    b.Property<int>("TextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TextId"));

                    b.Property<int?>("ActivitiesMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ErrorDetails")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsError")
                        .HasColumnType("bit");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("TextFrom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TextFromUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("TextFromUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TextMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextTo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TextToContactId")
                        .HasColumnType("int");

                    b.Property<string>("TextToName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TextToUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("TextType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TwillioSid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TextId");

                    b.ToTable("Texts");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.TimeZone", b =>
                {
                    b.Property<int>("TimeZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeZoneId"));

                    b.Property<string>("CityNames")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("EnumTimeZoneId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EnumTimeZoneID");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("TimeZoneIana")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TimeZoneIANA");

                    b.Property<string>("TimeZoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UtcOffset")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TimeZoneId");

                    b.ToTable("TimeZones");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.TimeZonesDaylightSaving", b =>
                {
                    b.Property<int>("TimeZonesDaylightSavingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeZonesDaylightSavingsId"));

                    b.Property<DateTime>("DstEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DstStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TimeZoneFullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TimeZoneName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TimeZoneYear")
                        .HasColumnType("int");

                    b.Property<string>("UtcOffset")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TimeZonesDaylightSavingsId")
                        .HasName("PK_TimeZones_DST1");

                    b.ToTable("TimeZonesDaylightSavings");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.UnlocoCode", b =>
                {
                    b.Property<int>("UnlocoCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnlocoCodeId"));

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("Airport")
                        .HasColumnType("bit");

                    b.Property<bool>("BorderCrossing")
                        .HasColumnType("bit");

                    b.Property<string>("Coordinates")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("FixedTransport")
                        .HasColumnType("bit");

                    b.Property<bool>("FunctionNotKnown")
                        .HasColumnType("bit");

                    b.Property<string>("IataCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("InlandPort")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("LocationDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LocationFunction")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LocationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LocationNameWithDiacriticals")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("MatchesPortCode")
                        .HasColumnType("bit");

                    b.Property<bool>("Multimodal")
                        .HasColumnType("bit");

                    b.Property<string>("PortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PostalExchangeOffice")
                        .HasColumnType("bit");

                    b.Property<bool>("RailTerminal")
                        .HasColumnType("bit");

                    b.Property<bool>("RoadTerminal")
                        .HasColumnType("bit");

                    b.Property<bool>("Seaport")
                        .HasColumnType("bit");

                    b.Property<string>("SubdivisionCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("UnlocoCode1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("UnlocoCode");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UnlocoCodeId")
                        .HasName("PK_UNLocoCodes");

                    b.HasIndex(new[] { "CountryName" }, "IX_UnlocoCodes_CountryName");

                    b.HasIndex(new[] { "LocationName" }, "IX_UnlocoCodes_LocationName");

                    b.HasIndex(new[] { "PortName" }, "IX_UnlocoCodes_PortName");

                    b.HasIndex(new[] { "UnlocoCode1" }, "IX_UnlocoCodes_UnlocoCode");

                    b.ToTable("UnlocoCodes");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.UserEmailLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Guid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Link")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<int?>("UserSubscriberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserEmailLinks");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateUserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserRole1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserRole");

                    b.HasKey("UserRoleId");

                    b.HasIndex(new[] { "SubscriberId" }, "IX_UserRoles_SubscriberId");

                    b.HasIndex(new[] { "UserRole1" }, "IX_UserRoles_UserRole");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.WebAppError", b =>
                {
                    b.Property<int>("WebAppErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebAppErrorId"));

                    b.Property<string>("ErrorCallStack")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ErrorCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ErrorDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("PageCalledFrom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoutineName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<string>("SubscriberName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WebAppErrorId");

                    b.ToTable("WebAppErrors");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.WorkflowAccount", b =>
                {
                    b.Property<int>("WorkflowAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkflowAccountId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("ErrorDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NylasAccessToken")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NylasAccountId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NylasCalendarId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NylasConnectedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NylasEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NylasProvider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Settings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("(N'added')");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.HasKey("WorkflowAccountId");

                    b.ToTable("WorkflowAccounts");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.WorkflowAccountEvent", b =>
                {
                    b.Property<int>("WorkflowAccountEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkflowAccountEventId"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeletedUserIdGlobal")
                        .HasColumnType("int");

                    b.Property<string>("JobStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("JobStatusId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("JobStatusStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("JobStatusType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LastWebhookDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastWebhookStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NylasEventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdGlobal")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowAccountId")
                        .HasColumnType("int");

                    b.HasKey("WorkflowAccountEventId");

                    b.ToTable("WorkflowAccountEvents");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.SubscriberTransferStep", b =>
                {
                    b.HasOne("FirstFreightAPI.Entities.Shared.SubscriberTransfer", "SubscriberTransfer")
                        .WithMany("SubscriberTransferSteps")
                        .HasForeignKey("SubscriberTransferId")
                        .IsRequired()
                        .HasConstraintName("FK_SubscriberTransferStep_SubscriberTransferStep");

                    b.Navigation("SubscriberTransfer");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.SubscriberTransferStepError", b =>
                {
                    b.HasOne("FirstFreightAPI.Entities.Shared.SubscriberTransferStep", "SubscriberTransferStep")
                        .WithMany("SubscriberTransferStepErrors")
                        .HasForeignKey("SubscriberTransferStepId")
                        .IsRequired()
                        .HasConstraintName("FK_SubscriberTransferStepError_SubscriberTransferStep");

                    b.Navigation("SubscriberTransferStep");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.SubscriberTransfer", b =>
                {
                    b.Navigation("SubscriberTransferSteps");
                });

            modelBuilder.Entity("FirstFreightAPI.Entities.Shared.SubscriberTransferStep", b =>
                {
                    b.Navigation("SubscriberTransferStepErrors");
                });
#pragma warning restore 612, 618
        }
    }
}
